{"message":"unused imports: `BorshDeserialize`, `BorshSerialize`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":26,"line_start":1,"line_end":1,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":23,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":28,"byte_end":44,"line_start":1,"line_end":1,"column_start":29,"column_end":45,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":29,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":46,"byte_end":60,"line_start":1,"line_end":1,"column_start":47,"column_end":61,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":47,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BorshDeserialize`, `BorshSerialize`, `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":78,"byte_end":81,"line_start":2,"line_end":2,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"use near_sdk::{env, near_bindgen};","highlight_start":16,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":78,"byte_end":83,"line_start":2,"line_end":2,"column_start":16,"column_end":21,"is_primary":true,"text":[{"text":"use near_sdk::{env, near_bindgen};","highlight_start":16,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `env`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:2:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::{env, near_bindgen};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused imports: `BorshDeserialize`, `BorshSerialize`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/vertabrate.rs","byte_start":22,"byte_end":26,"line_start":1,"line_end":1,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":23,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/vertabrate.rs","byte_start":28,"byte_end":44,"line_start":1,"line_end":1,"column_start":29,"column_end":45,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":29,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/vertabrate.rs","byte_start":46,"byte_end":60,"line_start":1,"line_end":1,"column_start":47,"column_end":61,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":47,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/vertabrate.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BorshDeserialize`, `BorshSerialize`, `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/vertabrate.rs:1:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/vertabrate.rs","byte_start":78,"byte_end":81,"line_start":2,"line_end":2,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"use near_sdk::{env, near_bindgen};","highlight_start":16,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/vertabrate.rs","byte_start":78,"byte_end":83,"line_start":2,"line_end":2,"column_start":16,"column_end":21,"is_primary":true,"text":[{"text":"use near_sdk::{env, near_bindgen};","highlight_start":16,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `env`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/vertabrate.rs:2:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::{env, near_bindgen};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused imports: `BorshDeserialize`, `BorshSerialize`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/invertabrate.rs","byte_start":22,"byte_end":26,"line_start":1,"line_end":1,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":23,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/invertabrate.rs","byte_start":28,"byte_end":44,"line_start":1,"line_end":1,"column_start":29,"column_end":45,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":29,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/invertabrate.rs","byte_start":46,"byte_end":60,"line_start":1,"line_end":1,"column_start":47,"column_end":61,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":47,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/invertabrate.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63,"is_primary":true,"text":[{"text":"use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BorshDeserialize`, `BorshSerialize`, `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/invertabrate.rs:1:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/invertabrate.rs","byte_start":78,"byte_end":81,"line_start":2,"line_end":2,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"use near_sdk::{env, near_bindgen};","highlight_start":16,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/invertabrate.rs","byte_start":78,"byte_end":83,"line_start":2,"line_end":2,"column_start":16,"column_end":21,"is_primary":true,"text":[{"text":"use near_sdk::{env, near_bindgen};","highlight_start":16,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `env`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/invertabrate.rs:2:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::{env, near_bindgen};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"the trait bound `VertabrateConst: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `VertabrateConst`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/vertabrate.rs","byte_start":1821,"byte_end":1836,"line_start":69,"line_end":69,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/vertabrate.rs","byte_start":1821,"byte_end":1836,"line_start":69,"line_end":69,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `&VertabrateConst`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VertabrateConst: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/vertabrate.rs:69:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `VertabrateConst`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&VertabrateConst`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `VertabrateConst: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `VertabrateConst`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/vertabrate.rs","byte_start":1821,"byte_end":1836,"line_start":69,"line_end":69,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/vertabrate.rs","byte_start":1821,"byte_end":1836,"line_start":69,"line_end":69,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `&VertabrateConst`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VertabrateConst: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/vertabrate.rs:69:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `VertabrateConst`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&VertabrateConst`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `VertabrateConst: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `VertabrateConst`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/vertabrate.rs","byte_start":1821,"byte_end":1836,"line_start":69,"line_end":69,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/vertabrate.rs","byte_start":1821,"byte_end":1836,"line_start":69,"line_end":69,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `&VertabrateConst`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VertabrateConst: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/vertabrate.rs:69:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `VertabrateConst`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&VertabrateConst`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `InvertabratesConst: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `InvertabratesConst`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/invertabrate.rs","byte_start":1720,"byte_end":1735,"line_start":61,"line_end":61,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/invertabrate.rs","byte_start":1720,"byte_end":1735,"line_start":61,"line_end":61,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `&InvertabratesConst`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `InvertabratesConst: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/invertabrate.rs:61:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `InvertabratesConst`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&InvertabratesConst`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `InvertabratesConst: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `InvertabratesConst`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/invertabrate.rs","byte_start":1720,"byte_end":1735,"line_start":61,"line_end":61,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/invertabrate.rs","byte_start":1720,"byte_end":1735,"line_start":61,"line_end":61,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `&InvertabratesConst`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `InvertabratesConst: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/invertabrate.rs:61:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `InvertabratesConst`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&InvertabratesConst`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Vertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Vertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Vertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Vertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Vertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6579,"byte_end":6601,"line_start":188,"line_end":188,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)) , $($rest)*);","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `&Vertabrate`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Vertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Vertabrate`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Vertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Vertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":4913,"byte_end":4971,"line_start":148,"line_end":148,"column_start":9,"column_end":67,"is_primary":false,"text":[{"text":"        json_internal!(@object $object () ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6536,"byte_end":6615,"line_start":188,"line_end":188,"column_start":9,"column_end":88,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)) , $($rest)*);","highlight_start":9,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Vertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Invertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Invertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6579,"byte_end":6601,"line_start":188,"line_end":188,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)) , $($rest)*);","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `&Invertabrate`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Invertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Invertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Invertabrate`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Vertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Vertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":4913,"byte_end":4971,"line_start":148,"line_end":148,"column_start":9,"column_end":67,"is_primary":false,"text":[{"text":"        json_internal!(@object $object () ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6536,"byte_end":6615,"line_start":188,"line_end":188,"column_start":9,"column_end":88,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)) , $($rest)*);","highlight_start":9,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Vertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Vertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Vertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6579,"byte_end":6601,"line_start":188,"line_end":188,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)) , $($rest)*);","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `&Vertabrate`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Vertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Vertabrate`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Vertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Vertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":4913,"byte_end":4971,"line_start":148,"line_end":148,"column_start":9,"column_end":67,"is_primary":false,"text":[{"text":"        json_internal!(@object $object () ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6536,"byte_end":6615,"line_start":188,"line_end":188,"column_start":9,"column_end":88,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)) , $($rest)*);","highlight_start":9,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Vertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Vertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Vertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6579,"byte_end":6601,"line_start":188,"line_end":188,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)) , $($rest)*);","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `&Vertabrate`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Vertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Vertabrate`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Vertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Vertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":4913,"byte_end":4971,"line_start":148,"line_end":148,"column_start":9,"column_end":67,"is_primary":false,"text":[{"text":"        json_internal!(@object $object () ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6536,"byte_end":6615,"line_start":188,"line_end":188,"column_start":9,"column_end":88,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)) , $($rest)*);","highlight_start":9,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Vertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Vertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Vertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6579,"byte_end":6601,"line_start":188,"line_end":188,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)) , $($rest)*);","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `&Vertabrate`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Vertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Vertabrate`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Vertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Vertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":4913,"byte_end":4971,"line_start":148,"line_end":148,"column_start":9,"column_end":67,"is_primary":false,"text":[{"text":"        json_internal!(@object $object () ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6536,"byte_end":6615,"line_start":188,"line_end":188,"column_start":9,"column_end":88,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)) , $($rest)*);","highlight_start":9,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Vertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Vertabrate: Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9532,"byte_end":9548,"line_start":278,"line_end":278,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        $crate::to_value(&$other).unwrap()","highlight_start":9,"highlight_end":25}],"label":"the trait `Serialize` is not implemented for `Vertabrate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":6807,"byte_end":6829,"line_start":193,"line_end":193,"column_start":52,"column_end":74,"is_primary":false,"text":[{"text":"        json_internal!(@object $object [$($key)+] (json_internal!($value)));","highlight_start":52,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":8429,"byte_end":8499,"line_start":234,"line_end":234,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        json_internal!(@object $object ($($key)* $tt) ($($rest)*) ($($rest)*));","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":9292,"byte_end":9345,"line_start":270,"line_end":270,"column_start":13,"column_end":66,"is_primary":false,"text":[{"text":"            json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":13,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1419,"byte_end":1444,"line_start":56,"line_end":56,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        json_internal!($($json)+)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1022,"byte_end":1037,"line_start":38,"line_end":38,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"near_sdk::serde_json::json!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1292,"byte_end":1309,"line_start":53,"line_end":53,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"json_internal!","def_site_span":{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/macros.rs","byte_start":1956,"byte_end":1982,"line_start":69,"line_end":69,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_value`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs","byte_start":27978,"byte_end":27987,"line_start":944,"line_end":944,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vertabrate: Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Serialize` is not implemented for `Vertabrate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `Vec<Vertabrate>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Serialize` for `&Vec<Vertabrate>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/christopherlijoodi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.82/src/value/mod.rs:944:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Serialize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `json_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 17 previous errors; 6 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 17 previous errors; 6 warnings emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}
